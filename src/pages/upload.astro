---
import { v2 as cloudinary } from 'cloudinary';
import type { UploadApiOptions } from 'cloudinary';
cloudinary.config({
	secure: true,
	cloud_name: import.meta.env.CLOUDINARY_CLOUD_NAME,
	api_key: import.meta.env.CLOUDINARY_API_KEY,
	api_secret: import.meta.env.CLOUDINARY_API_SECRET,
});

let data = null;
if (Astro.request.method === 'POST') {
	const formData = await Astro.request.text();
	console.log(await uploadImage(formData));
}

async function uploadImage(imagePath: any) {

	// Use the uploaded file's name as the asset's public ID and 
	// allow overwriting the asset with new versions
	const options: UploadApiOptions = {
		use_filename: true,
		unique_filename: false,
		overwrite: true,
		folder: import.meta.env.CLOUDINARY_FOLDER,
	};

	try {
		// Upload the image
		const result = await cloudinary.uploader.upload(imagePath, options);
		console.log(result);
		return result.public_id;
	} catch (error) {
		console.error(error);
	}
};
---

<form method="post" enctype="multipart/form-data">
	<input type="file" name="file" />
	<input type='text' name='text' />
	<button type="submit">Submit</button>
</form>
<script>
	import { fileToBase64 } from '../utils/utils';
	const form = document.querySelector('form')!;
	form.addEventListener('submit', async e => {
		e.preventDefault();
		const formData = new FormData(form);
		const file = formData.get('file') as File | null;
		if (file) {
			// convert file to base64 and send to server
			try {
				const base64 = await fileToBase64(file);
				fetch(window.location.href, {
					method: 'POST',
					body: base64,
					headers: {
						'Content-Type': 'multipart/form-data'
					}
				})
			} catch (error) {
				console.error(error);
			}
		};
	});


</script>